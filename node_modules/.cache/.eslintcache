[{"/home/agilepc99/Desktop/tutorial/react_form/src/index.js":"1","/home/agilepc99/Desktop/tutorial/react_form/src/App.js":"2","/home/agilepc99/Desktop/tutorial/react_form/src/reportWebVitals.js":"3","/home/agilepc99/Desktop/tutorial/react_form/src/components/Formwithouthooklib.js":"4","/home/agilepc99/Desktop/tutorial/react_form/src/components/Formwithhook.js":"5","/home/agilepc99/Desktop/tutorial/react_form/src/components/f.js":"6"},{"size":589,"mtime":1671100701856,"results":"7","hashOfConfig":"8"},{"size":652,"mtime":1671103405757,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1671020338191,"results":"10","hashOfConfig":"8"},{"size":2719,"mtime":1671101336274,"results":"11","hashOfConfig":"8"},{"size":3360,"mtime":1671163560654,"results":"12","hashOfConfig":"8"},{"size":2082,"mtime":1671164981239,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},"1w7gaw6",{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"17"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/agilepc99/Desktop/tutorial/react_form/src/index.js",[],[],[],"/home/agilepc99/Desktop/tutorial/react_form/src/App.js",[],[],"/home/agilepc99/Desktop/tutorial/react_form/src/reportWebVitals.js",[],[],"/home/agilepc99/Desktop/tutorial/react_form/src/components/Formwithouthooklib.js",["34","35","36"],[],"import React, { useState, useEffect } from \"react\";\nconst Form = () => {\n    const initialValues = { username: \"\", email: \"\", password: \"\" }\n    const [FormValue, setFormValues] = useState(initialValues)\n    const [formerrors, setFormErrors] = useState({})\n    const [isSubmit, setIsSubmit] = useState(false)\n\n\n    const handleLogin = () => {\n        // console.log(FormValue)\n        setFormErrors(Validate(FormValue))\n        setIsSubmit(true)\n\n    }\n    useEffect(() => {\n        console.log(formerrors)\n        if (Object.keys(formerrors).length === 0 && isSubmit) {\n            console.log(FormValue)\n        }\n    }, [formerrors])\n    const Validate = (values) => {\n        const errors = {};\n        const regexmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n        const regexpwd = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/;\n        if (!values.username) {\n            errors.username = \"Username is required\";\n        }\n        if (!values.email) {\n            errors.email = \"Email is required\";\n        } else if (!regexmail.test(values.email)) {\n            errors.email = \" please enter valid email \";\n        }\n        if (!values.password) {\n            errors.password = \"Password is required\";\n        } else if (!regexpwd.test(values.password)) {\n            errors.password = \" please enter valid password \";\n        }\n        return errors\n    }\n    return (\n        <div>\n            <h1>Form validation </h1>\n            {Object.keys(formerrors).length === 0 && isSubmit ? (<div>sign in successfully</div>) : (<div>{JSON.stringify(FormValue, undefined, 2)}</div>)}\n\n            <form >\n                <div>\n                    <label>User name:</label>\n                    <input type=\"text\" name=\"username\" placeholder=\"username\" value={FormValue.username} onChange={(e) => setFormValues({ ...FormValue, username: e.target.value })} />\n                </div>\n                <p> {formerrors.username} </p>\n                <div>\n                    <label>Email Id:</label>\n                    <input type=\"email\" name=\"email\" placeholder=\"email\" value={FormValue.email} onChange={(e) => setFormValues({ ...FormValue, email: e.target.value })} />\n                </div>\n                <p> {formerrors.email} </p>\n                <div>\n                    <label>Password:</label>\n                    <input type=\"password\" name=\"password\" placeholder=\"password\" value={FormValue.password} onChange={(e) => setFormValues({ ...FormValue, password: e.target.value })} />\n                </div>\n                <p> {formerrors.password} </p>\n                <button type=\"button\" onClick={handleLogin}> logIn </button>\n            </form>\n        </div>\n    )\n}\nexport default Form; ","/home/agilepc99/Desktop/tutorial/react_form/src/components/Formwithhook.js",["37"],[],"/home/agilepc99/Desktop/tutorial/react_form/src/components/f.js",["38","39"],[],{"ruleId":"40","severity":1,"message":"41","line":20,"column":8,"nodeType":"42","endLine":20,"endColumn":20,"suggestions":"43"},{"ruleId":"44","severity":1,"message":"45","line":23,"column":34,"nodeType":"46","messageId":"47","endLine":23,"endColumn":35,"suggestions":"48"},{"ruleId":"44","severity":1,"message":"45","line":23,"column":50,"nodeType":"46","messageId":"47","endLine":23,"endColumn":51,"suggestions":"49"},{"ruleId":"44","severity":1,"message":"45","line":65,"column":104,"nodeType":"46","messageId":"47","endLine":65,"endColumn":105,"suggestions":"50"},{"ruleId":"44","severity":1,"message":"45","line":29,"column":139,"nodeType":"46","messageId":"47","endLine":29,"endColumn":140,"suggestions":"51"},{"ruleId":"44","severity":1,"message":"45","line":29,"column":155,"nodeType":"46","messageId":"47","endLine":29,"endColumn":156,"suggestions":"52"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'FormValue' and 'isSubmit'. Either include them or remove the dependency array.","ArrayExpression",["53"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["54","55"],["56","57"],["58","59"],["60","61"],["62","63"],{"desc":"64","fix":"65"},{"messageId":"66","fix":"67","desc":"68"},{"messageId":"69","fix":"70","desc":"71"},{"messageId":"66","fix":"72","desc":"68"},{"messageId":"69","fix":"73","desc":"71"},{"messageId":"66","fix":"74","desc":"68"},{"messageId":"69","fix":"75","desc":"71"},{"messageId":"66","fix":"76","desc":"68"},{"messageId":"69","fix":"77","desc":"71"},{"messageId":"66","fix":"78","desc":"68"},{"messageId":"69","fix":"79","desc":"71"},"Update the dependencies array to be: [FormValue, formerrors, isSubmit]",{"range":"80","text":"81"},"removeEscape",{"range":"82","text":"83"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"84","text":"85"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"86","text":"83"},{"range":"87","text":"85"},{"range":"88","text":"83"},{"range":"89","text":"85"},{"range":"90","text":"83"},{"range":"91","text":"85"},{"range":"92","text":"83"},{"range":"93","text":"85"},[623,635],"[FormValue, formerrors, isSubmit]",[732,733],"",[732,732],"\\",[748,749],[748,748],[2062,2063],[2062,2062],[1391,1392],[1391,1391],[1407,1408],[1407,1407]]