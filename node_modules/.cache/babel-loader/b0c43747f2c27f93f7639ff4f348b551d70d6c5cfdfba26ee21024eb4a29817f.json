{"ast":null,"code":"var _jsxFileName = \"/home/agilepc99/Desktop/tutorial/react_form/src/components/Formwithhook.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API = \"https://jsonplaceholder.typicode.com\";\nconst Formwithhook = () => {\n  _s();\n  const [userInfo, setUserinfo] = useState();\n  const [user, setUser] = useState([]);\n  const [isError, setIsError] = useState(\"\");\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm();\n  const Submit = data => {\n    setUserinfo(data);\n    console.log(data);\n  };\n  const GetUser = async url => {\n    try {\n      const res = await axios.get(url);\n      setUser(res.data);\n      console.log(res.data.slice(0, 5));\n    } catch (error) {\n      setIsError(error.message);\n      console.log(error);\n    }\n  };\n  useEffect(() => {\n    GetUser(`${API}/users`);\n    // axios.get(\"https://jsonplaceholder.typicode.com/users\")\n    //     .then((res) => {\n    //         setUser(res.data)\n\n    //     }).catch((error) => {\n    //         setIsError(error.message)\n    //         console.log(error)\n    //     })\n  });\n\n  console.log(errors);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Form with form-hook library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), isError !== \"\" && /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: isError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: JSON.stringify(userInfo, undefined, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"username: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          placeholder: \"username\",\n          ...register(\"username\", {\n            required: \"username is required\"\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), errors.username && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        children: errors.username.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 37\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"email: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"email\",\n          placeholder: \"email\",\n          ...register(\"email\", {\n            required: \"email is required\",\n            pattern: {\n              value: /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\n              message: \"please enter valid email\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), errors.email && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        children: errors.email.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 34\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"password: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"password\",\n          ...register(\"password\", {\n            required: \"password is required\",\n            pattern: {\n              value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/,\n              message: \"please enter valid password\"\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), errors.password && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          color: \"red\"\n        },\n        children: errors.password.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 24\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleSubmit(Submit),\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), user.slice(0, 5).map(users => {\n      const {\n        id,\n        name,\n        username,\n        email\n      } = users;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 25\n        }, this)]\n      }, id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 21\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n_s(Formwithhook, \"cr+lPBseTdmTB1FVx3SewppHmeM=\", false, function () {\n  return [useForm];\n});\n_c = Formwithhook;\nexport default Formwithhook;\nvar _c;\n$RefreshReg$(_c, \"Formwithhook\");","map":{"version":3,"names":["axios","React","useEffect","useState","useForm","API","Formwithhook","userInfo","setUserinfo","user","setUser","isError","setIsError","register","handleSubmit","formState","errors","Submit","data","console","log","GetUser","url","res","get","slice","error","message","JSON","stringify","undefined","required","username","color","pattern","value","email","password","map","users","id","name"],"sources":["/home/agilepc99/Desktop/tutorial/react_form/src/components/Formwithhook.js"],"sourcesContent":["import axios from \"axios\";\nimport React, { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nconst API = \"https://jsonplaceholder.typicode.com\"\n\nconst Formwithhook = () => {\n    const [userInfo, setUserinfo] = useState()\n    const [user, setUser] = useState([])\n    const [isError, setIsError] = useState(\"\")\n\n    const { register, handleSubmit, formState: { errors } } = useForm()\n    const Submit = (data) => {\n        setUserinfo(data)\n        console.log(data)\n\n\n    }\n    const GetUser = async (url) => {\n        try {\n            const res = await axios.get(url)\n            setUser(res.data)\n            console.log(res.data.slice(0, 5))\n        } catch (error) {\n            setIsError(error.message)\n            console.log(error)\n        }\n\n    }\n    useEffect(() => {\n        GetUser(`${API}/users`)\n        // axios.get(\"https://jsonplaceholder.typicode.com/users\")\n        //     .then((res) => {\n        //         setUser(res.data)\n\n        //     }).catch((error) => {\n        //         setIsError(error.message)\n        //         console.log(error)\n        //     })\n    })\n\n    console.log(errors)\n    return (\n        <div>\n            <h2>Form with form-hook library</h2>\n            {isError !== \"\" && <h3>{isError}</h3>}\n\n\n            <div>{JSON.stringify(userInfo, undefined, 2)}</div>\n            <form >\n                <div>\n                    <label>username: </label>\n                    <input type=\"text\"\n                        name=\"username\"\n                        placeholder=\"username\"\n                        {...register(\"username\", { required: \"username is required\" })}>\n                    </input>\n                </div>\n                {errors.username && <div style={{ color: \"red\" }}>{errors.username.message}</div>}\n                <div>\n                    <label>email: </label>\n                    <input type=\"text\"\n                        name=\"email\"\n                        placeholder=\"email\"\n                        {...register(\"email\", { required: \"email is required\", pattern: { value: /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/, message: \"please enter valid email\" } })}>\n                    </input>\n                </div>\n                {errors.email && <div style={{ color: \"red\" }}>{errors.email.message}</div>}\n                <div>\n                    <label>password: </label>\n                    <input type=\"password\"\n                        name=\"password\"\n                        placeholder=\"password\"\n                        {...register(\"password\", { required: \"password is required\", pattern: { value: /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/, message: \"please enter valid password\" } })}>\n                    </input>\n                </div>\n                {errors.password\n                    && <div style={{ color: \"red\" }}>{errors.password.message}</div>}\n                <button type=\"button\" onClick={handleSubmit(Submit)}>Register</button>\n            </form>\n            {user.slice(0, 5).map((users) => {\n                const { id, name, username, email } = users;\n                return (\n                    <div key={id}>\n                        <h4>{name}</h4>\n                        <h4>{username}</h4>\n                        <h4>{email}</h4>\n                    </div>\n                )\n            })}\n        </div>\n    )\n}\nexport default Formwithhook;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,OAAO,QAAQ,iBAAiB;AAAC;AAE1C,MAAMC,GAAG,GAAG,sCAAsC;AAElD,MAAMC,YAAY,GAAG,MAAM;EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGL,QAAQ,EAAE;EAC1C,MAAM,CAACM,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACQ,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAM;IAAEU,QAAQ;IAAEC,YAAY;IAAEC,SAAS,EAAE;MAAEC;IAAO;EAAE,CAAC,GAAGZ,OAAO,EAAE;EACnE,MAAMa,MAAM,GAAIC,IAAI,IAAK;IACrBV,WAAW,CAACU,IAAI,CAAC;IACjBC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EAGrB,CAAC;EACD,MAAMG,OAAO,GAAG,MAAOC,GAAG,IAAK;IAC3B,IAAI;MACA,MAAMC,GAAG,GAAG,MAAMvB,KAAK,CAACwB,GAAG,CAACF,GAAG,CAAC;MAChCZ,OAAO,CAACa,GAAG,CAACL,IAAI,CAAC;MACjBC,OAAO,CAACC,GAAG,CAACG,GAAG,CAACL,IAAI,CAACO,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACrC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACZd,UAAU,CAACc,KAAK,CAACC,OAAO,CAAC;MACzBR,OAAO,CAACC,GAAG,CAACM,KAAK,CAAC;IACtB;EAEJ,CAAC;EACDxB,SAAS,CAAC,MAAM;IACZmB,OAAO,CAAE,GAAEhB,GAAI,QAAO,CAAC;IACvB;IACA;IACA;;IAEA;IACA;IACA;IACA;EACJ,CAAC,CAAC;;EAEFc,OAAO,CAACC,GAAG,CAACJ,MAAM,CAAC;EACnB,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAoC,EACnCL,OAAO,KAAK,EAAE,iBAAI;MAAA,UAAKA;IAAO;MAAA;MAAA;MAAA;IAAA,QAAM,eAGrC;MAAA,UAAMiB,IAAI,CAACC,SAAS,CAACtB,QAAQ,EAAEuB,SAAS,EAAE,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAO,eACnD;MAAA,wBACI;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAyB,eACzB;UAAO,IAAI,EAAC,MAAM;UACd,IAAI,EAAC,UAAU;UACf,WAAW,EAAC,UAAU;UAAA,GAClBjB,QAAQ,CAAC,UAAU,EAAE;YAAEkB,QAAQ,EAAE;UAAuB,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA,QAC1D;MAAA;QAAA;QAAA;QAAA;MAAA,QACN,EACLf,MAAM,CAACgB,QAAQ,iBAAI;QAAK,KAAK,EAAE;UAAEC,KAAK,EAAE;QAAM,CAAE;QAAA,UAAEjB,MAAM,CAACgB,QAAQ,CAACL;MAAO;QAAA;QAAA;QAAA;MAAA,QAAO,eACjF;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAsB,eACtB;UAAO,IAAI,EAAC,MAAM;UACd,IAAI,EAAC,OAAO;UACZ,WAAW,EAAC,OAAO;UAAA,GACfd,QAAQ,CAAC,OAAO,EAAE;YAAEkB,QAAQ,EAAE,mBAAmB;YAAEG,OAAO,EAAE;cAAEC,KAAK,EAAE,kCAAkC;cAAER,OAAO,EAAE;YAA2B;UAAE,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA,QACjJ;MAAA;QAAA;QAAA;QAAA;MAAA,QACN,EACLX,MAAM,CAACoB,KAAK,iBAAI;QAAK,KAAK,EAAE;UAAEH,KAAK,EAAE;QAAM,CAAE;QAAA,UAAEjB,MAAM,CAACoB,KAAK,CAACT;MAAO;QAAA;QAAA;QAAA;MAAA,QAAO,eAC3E;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAyB,eACzB;UAAO,IAAI,EAAC,UAAU;UAClB,IAAI,EAAC,UAAU;UACf,WAAW,EAAC,UAAU;UAAA,GAClBd,QAAQ,CAAC,UAAU,EAAE;YAAEkB,QAAQ,EAAE,sBAAsB;YAAEG,OAAO,EAAE;cAAEC,KAAK,EAAE,gDAAgD;cAAER,OAAO,EAAE;YAA8B;UAAE,CAAC;QAAC;UAAA;UAAA;UAAA;QAAA,QACxK;MAAA;QAAA;QAAA;QAAA;MAAA,QACN,EACLX,MAAM,CAACqB,QAAQ,iBACT;QAAK,KAAK,EAAE;UAAEJ,KAAK,EAAE;QAAM,CAAE;QAAA,UAAEjB,MAAM,CAACqB,QAAQ,CAACV;MAAO;QAAA;QAAA;QAAA;MAAA,QAAO,eACpE;QAAQ,IAAI,EAAC,QAAQ;QAAC,OAAO,EAAEb,YAAY,CAACG,MAAM,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAkB;IAAA;MAAA;MAAA;MAAA;IAAA,QACnE,EACNR,IAAI,CAACgB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAACa,GAAG,CAAEC,KAAK,IAAK;MAC7B,MAAM;QAAEC,EAAE;QAAEC,IAAI;QAAET,QAAQ;QAAEI;MAAM,CAAC,GAAGG,KAAK;MAC3C,oBACI;QAAA,wBACI;UAAA,UAAKE;QAAI;UAAA;UAAA;UAAA;QAAA,QAAM,eACf;UAAA,UAAKT;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAM,eACnB;UAAA,UAAKI;QAAK;UAAA;UAAA;UAAA;QAAA,QAAM;MAAA,GAHVI,EAAE;QAAA;QAAA;QAAA;MAAA,QAIN;IAEd,CAAC,CAAC;EAAA;IAAA;IAAA;IAAA;EAAA,QACA;AAEd,CAAC;AAAA,GAtFKlC,YAAY;EAAA,QAK4CF,OAAO;AAAA;AAAA,KAL/DE,YAAY;AAuFlB,eAAeA,YAAY;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}