{"ast":null,"code":"var _jsxFileName = \"/home/agilepc99/Desktop/tutorial/react_form/src/components/Formwithouthooklib.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Form = () => {\n  _s();\n  const initialValues = {\n    username: \"\",\n    email: \"\",\n    password: \"\"\n  };\n  const [FormValue, setFormValues] = useState(initialValues);\n  const [formerrors, setFormErrors] = useState({});\n  const [isSubmit, setIsSubmit] = useState(false);\n  const handleLogin = () => {\n    setFormErrors(Validate(FormValue));\n    setIsSubmit(true);\n  };\n  useEffect(() => {\n    console.log(formerrors);\n    if (Object.keys(formerrors).length === 0 && isSubmit) {\n      console.log(FormValue);\n    }\n  }, [formerrors]);\n  const Validate = values => {\n    const errors = {};\n    const regexmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n    const regexpwd = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/;\n    if (!values.username) {\n      errors.username = \"Username is required\";\n    }\n    if (!values.email) {\n      errors.email = \"Email is required\";\n    } else if (!regexmail.test(values.email)) {\n      errors.email = \" please enter valid email \";\n    }\n    if (!values.password) {\n      errors.password = \"Password is required\";\n    } else if (!regexpwd.test(values.password)) {\n      errors.email = \" please enter valid password \";\n    }\n    return errors;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Form validation \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), Object.keys(formerrors).length === 0 && isSubmit ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"sign in successfully\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 66\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: JSON.stringify(FormValue, undefined, 2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 102\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"User name:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          placeholder: \"username\",\n          value: FormValue.username,\n          onChange: e => setFormValues({\n            ...FormValue,\n            username: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", formerrors.username, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Email Id:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          name: \"email\",\n          placeholder: \"email\",\n          value: FormValue.email,\n          onChange: e => setFormValues({\n            ...FormValue,\n            email: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", formerrors.email, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Password:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          placeholder: \"password\",\n          value: FormValue.password,\n          onChange: e => setFormValues({\n            ...FormValue,\n            password: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", formerrors.password, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleLogin,\n        children: \" logIn \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n_s(Form, \"fg6W5zNoYB/c7e2qen86ne27gJU=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","useEffect","Form","initialValues","username","email","password","FormValue","setFormValues","formerrors","setFormErrors","isSubmit","setIsSubmit","handleLogin","Validate","console","log","Object","keys","length","values","errors","regexmail","regexpwd","test","JSON","stringify","undefined","e","target","value"],"sources":["/home/agilepc99/Desktop/tutorial/react_form/src/components/Formwithouthooklib.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nconst Form = () => {\n    const initialValues = { username: \"\", email: \"\", password: \"\" }\n    const [FormValue, setFormValues] = useState(initialValues)\n    const [formerrors, setFormErrors] = useState({})\n    const [isSubmit, setIsSubmit] = useState(false)\n\n\n    const handleLogin = () => {\n        \n        setFormErrors(Validate(FormValue))\n        setIsSubmit(true)\n\n    }\n    useEffect(() => {\n        console.log(formerrors)\n        if (Object.keys(formerrors).length === 0 && isSubmit) {\n            console.log(FormValue)\n        }\n    }, [formerrors])\n    const Validate = (values) => {\n        const errors = {};\n        const regexmail = /^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$/;\n        const regexpwd = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{8,}$/;\n        if (!values.username) {\n            errors.username = \"Username is required\";\n        }\n        if (!values.email) {\n            errors.email = \"Email is required\";\n        } else if (!regexmail.test(values.email)) {\n            errors.email = \" please enter valid email \";\n        }\n        if (!values.password) {\n            errors.password = \"Password is required\";\n        } else if (!regexpwd.test(values.password)) {\n            errors.email = \" please enter valid password \";\n        }\n        return errors\n    }\n    return (\n        <div>\n            <h1>Form validation </h1>\n            {Object.keys(formerrors).length === 0 && isSubmit ? (<div>sign in successfully</div>) : (<div>{JSON.stringify(FormValue, undefined, 2)}</div>)}\n\n            <form >\n                <div>\n                    <label>User name:</label>\n                    <input type=\"text\" name=\"username\" placeholder=\"username\" value={FormValue.username} onChange={(e) => setFormValues({ ...FormValue, username: e.target.value })} />\n                </div>\n                <p> {formerrors.username} </p>\n                <div>\n                    <label>Email Id:</label>\n                    <input type=\"email\" name=\"email\" placeholder=\"email\" value={FormValue.email} onChange={(e) => setFormValues({ ...FormValue, email: e.target.value })} />\n                </div>\n                <p> {formerrors.email} </p>\n                <div>\n                    <label>Password:</label>\n                    <input type=\"password\" name=\"password\" placeholder=\"password\" value={FormValue.password} onChange={(e) => setFormValues({ ...FormValue, password: e.target.value })} />\n                </div>\n                <p> {formerrors.password} </p>\n                <button type=\"button\" onClick={handleLogin}> logIn </button>\n            </form>\n        </div>\n    )\n}\nexport default Form; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC;AACnD,MAAMC,IAAI,GAAG,MAAM;EAAA;EACf,MAAMC,aAAa,GAAG;IAAEC,QAAQ,EAAE,EAAE;IAAEC,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC;EAC/D,MAAM,CAACC,SAAS,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAACG,aAAa,CAAC;EAC1D,MAAM,CAACM,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC,CAAC;EAChD,MAAM,CAACW,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAG/C,MAAMa,WAAW,GAAG,MAAM;IAEtBH,aAAa,CAACI,QAAQ,CAACP,SAAS,CAAC,CAAC;IAClCK,WAAW,CAAC,IAAI,CAAC;EAErB,CAAC;EACDX,SAAS,CAAC,MAAM;IACZc,OAAO,CAACC,GAAG,CAACP,UAAU,CAAC;IACvB,IAAIQ,MAAM,CAACC,IAAI,CAACT,UAAU,CAAC,CAACU,MAAM,KAAK,CAAC,IAAIR,QAAQ,EAAE;MAClDI,OAAO,CAACC,GAAG,CAACT,SAAS,CAAC;IAC1B;EACJ,CAAC,EAAE,CAACE,UAAU,CAAC,CAAC;EAChB,MAAMK,QAAQ,GAAIM,MAAM,IAAK;IACzB,MAAMC,MAAM,GAAG,CAAC,CAAC;IACjB,MAAMC,SAAS,GAAG,+CAA+C;IACjE,MAAMC,QAAQ,GAAG,gDAAgD;IACjE,IAAI,CAACH,MAAM,CAAChB,QAAQ,EAAE;MAClBiB,MAAM,CAACjB,QAAQ,GAAG,sBAAsB;IAC5C;IACA,IAAI,CAACgB,MAAM,CAACf,KAAK,EAAE;MACfgB,MAAM,CAAChB,KAAK,GAAG,mBAAmB;IACtC,CAAC,MAAM,IAAI,CAACiB,SAAS,CAACE,IAAI,CAACJ,MAAM,CAACf,KAAK,CAAC,EAAE;MACtCgB,MAAM,CAAChB,KAAK,GAAG,4BAA4B;IAC/C;IACA,IAAI,CAACe,MAAM,CAACd,QAAQ,EAAE;MAClBe,MAAM,CAACf,QAAQ,GAAG,sBAAsB;IAC5C,CAAC,MAAM,IAAI,CAACiB,QAAQ,CAACC,IAAI,CAACJ,MAAM,CAACd,QAAQ,CAAC,EAAE;MACxCe,MAAM,CAAChB,KAAK,GAAG,+BAA+B;IAClD;IACA,OAAOgB,MAAM;EACjB,CAAC;EACD,oBACI;IAAA,wBACI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAyB,EACxBJ,MAAM,CAACC,IAAI,CAACT,UAAU,CAAC,CAACU,MAAM,KAAK,CAAC,IAAIR,QAAQ,gBAAI;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAA+B,gBAAK;MAAA,UAAMc,IAAI,CAACC,SAAS,CAACnB,SAAS,EAAEoB,SAAS,EAAE,CAAC;IAAC;MAAA;MAAA;MAAA;IAAA,QAAQ,eAE9I;MAAA,wBACI;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAyB,eACzB;UAAO,IAAI,EAAC,MAAM;UAAC,IAAI,EAAC,UAAU;UAAC,WAAW,EAAC,UAAU;UAAC,KAAK,EAAEpB,SAAS,CAACH,QAAS;UAAC,QAAQ,EAAGwB,CAAC,IAAKpB,aAAa,CAAC;YAAE,GAAGD,SAAS;YAAEH,QAAQ,EAAEwB,CAAC,CAACC,MAAM,CAACC;UAAM,CAAC;QAAE;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACjK,eACN;QAAA,gBAAKrB,UAAU,CAACL,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,eAC9B;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAwB,eACxB;UAAO,IAAI,EAAC,OAAO;UAAC,IAAI,EAAC,OAAO;UAAC,WAAW,EAAC,OAAO;UAAC,KAAK,EAAEG,SAAS,CAACF,KAAM;UAAC,QAAQ,EAAGuB,CAAC,IAAKpB,aAAa,CAAC;YAAE,GAAGD,SAAS;YAAEF,KAAK,EAAEuB,CAAC,CAACC,MAAM,CAACC;UAAM,CAAC;QAAE;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACtJ,eACN;QAAA,gBAAKrB,UAAU,CAACJ,KAAK;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,eAC3B;QAAA,wBACI;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAwB,eACxB;UAAO,IAAI,EAAC,UAAU;UAAC,IAAI,EAAC,UAAU;UAAC,WAAW,EAAC,UAAU;UAAC,KAAK,EAAEE,SAAS,CAACD,QAAS;UAAC,QAAQ,EAAGsB,CAAC,IAAKpB,aAAa,CAAC;YAAE,GAAGD,SAAS;YAAED,QAAQ,EAAEsB,CAAC,CAACC,MAAM,CAACC;UAAM,CAAC;QAAE;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACrK,eACN;QAAA,gBAAKrB,UAAU,CAACH,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAAM,eAC9B;QAAQ,IAAI,EAAC,QAAQ;QAAC,OAAO,EAAEO,WAAY;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAiB;IAAA;MAAA;MAAA;MAAA;IAAA,QACzD;EAAA;IAAA;IAAA;IAAA;EAAA,QACL;AAEd,CAAC;AAAA,GA/DKX,IAAI;AAAA,KAAJA,IAAI;AAgEV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}